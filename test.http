# Набор тестов для эндпоинтов которые можно запустить
# в VSCode с помощью плагина  REST Client
# Найти можно по идентификатору: humao.rest-client
# Tunder Client не позволяет свободно импортировать-экспортировать записи,
# поэтому перешел на этот плагин. Он тоже хорош :-)

# Создаем книгу
POST http://localhost:8000/api/v1/books/ HTTP/1.1
content-type: application/json

{
    "title": "Wrong Code",
    "author": "Robert Martin",
    "seller_id": 1,
    "pages": 104,
    "year": 2007
}

###

# Получаем список книг
GET http://localhost:8000/api/v1/books/ HTTP/1.1

###

# Получаем одну книгу по ее ИД
GET http://localhost:8000/api/v1/books/1 HTTP/1.1

###

# Обновляем поля в данных о книге
PUT http://localhost:8000/api/v1/books/1 HTTP/1.1
content-type: application/json

{
    "title": "Clean Code",
    "author": "Robert Martin",
    "count_pages": 10,
    "seller_id": 1,
    "year": 2007,
    "id": 0
}

###

# Удаляем книгу
DELETE http://localhost:8000/api/v1/books/1 HTTP/1.1
content-type: application/json

###


# Получаем список продавцов
GET http://localhost:8000/api/v1/sellers/ HTTP/1.1

###

# Создаем продавца
POST http://localhost:8000/api/v1/sellers/ HTTP/1.1
content-type: application/json

{
    "first_name": "Oleg",
    "last_name": "Ivanov",
    "phone": "1234567890",
    "email": "olegivanov@sellers.ru",
    "password": "Profit18"
}

###

# Получаем одного продавца по его ИД
GET http://localhost:8000/api/v1/sellers/1 HTTP/1.1

###

# Обновляем поля в данных о продавце
PUT http://localhost:8000/api/v1/sellers/1 HTTP/1.1
content-type: application/json

{
    "first_name": "Oleg",
    "last_name": "Ivanov",
    "phone": "1234567890",
    "email": "dosvyazi@mail.me"
}

###

# Удаляем продавца
DELETE http://localhost:8000/api/v1/sellers/1 HTTP/1.1

###